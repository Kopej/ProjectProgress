var landsat8 = ee.ImageCollection("LANDSAT/LC08/C02/T1_TOA");

var landsat9 = ee.ImageCollection("LANDSAT/LC09/C02/T1_TOA")

var rgbVis = {
  min: 0.0,
  max: 0.3,
  bands: ['B1', 'B2', 'B3'],
};

var ndviVis = {min:0, max:1, palette: ['green', 'white']};

var nbr2Vis = {min:0, max:2, palette: ['red', 'white']};

var b3MinusB2Vis = {min:-1, max:1, palette: ['blue', 'red']};

var b2MinusB1Vis = {min:-1, max:1, palette: ['white', 'red']};


var filtered = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2013-05-01', '2013-07-30')
  .filterBounds(geometry);
  
var filtered2 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2013-08-01', '2013-10-30')
  .filterBounds(geometry);
  
var filtered3 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2013-10-01', '2013-12-30')
  .filterBounds(geometry);
  
var filtered34 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2013-01-01', '2013-12-30')
  .filterBounds(geometry);
  
var filtered4 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2014-05-01', '2014-07-30')
  .filterBounds(geometry);
  
var filtered5 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2014-08-01', '2014-10-30')
  .filterBounds(geometry);
  
var filtered6 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2014-10-01', '2014-12-30')
  .filterBounds(geometry);
  
var filtered35 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2014-01-01', '2014-12-30')
  .filterBounds(geometry);
  
var filtered7 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2015-05-01', '2015-07-30')
  .filterBounds(geometry);
  
var filtered8 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2015-07-01', '2015-10-30')
  .filterBounds(geometry);
  
var filtered9 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2015-10-01', '2015-12-30')
  .filterBounds(geometry);

var filtered36 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2015-01-01', '2015-12-30')
  .filterBounds(geometry);
  
var filtered10 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2016-05-01', '2016-07-30')
  .filterBounds(geometry);
  
var filtered11 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2016-07-01', '2016-10-30')
  .filterBounds(geometry);
  
var filtered12 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2016-10-01', '2016-12-30')
  .filterBounds(geometry);
  
var filtered37 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2016-01-01', '2016-12-30')
  .filterBounds(geometry);
  
var filtered13 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2017-05-01', '2017-07-30')
  .filterBounds(geometry);
  
var filtered14 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2017-07-01', '2017-10-30')
  .filterBounds(geometry);
  
var filtered15 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2017-10-01', '2017-12-30')
  .filterBounds(geometry);
  
var filtered38 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2017-01-01', '2017-12-30')
  .filterBounds(geometry);
  
var filtered16 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2018-05-01', '2018-07-30')
  .filterBounds(geometry);
  
var filtered17 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2018-07-01', '2018-10-30')
  .filterBounds(geometry);
  
var filtered18 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2018-10-01', '2018-12-30')
  .filterBounds(geometry);
  
var filtered39 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2018-01-01', '2018-12-30')
  .filterBounds(geometry);
  
var filtered19 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2019-05-01', '2019-07-30')
  .filterBounds(geometry);
  
var filtered20 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2019-07-01', '2019-10-30')
  .filterBounds(geometry);
  
var filtered21 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2019-10-01', '2019-12-30')
  .filterBounds(geometry);
  
var filtered40 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2019-01-01', '2019-12-30')
  .filterBounds(geometry);
  
var filtered22 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2020-05-01', '2020-07-30')
  .filterBounds(geometry);
  
var filtered23 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2020-07-01', '2020-10-30')
  .filterBounds(geometry);
  
var filtered24 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2020-10-01', '2020-12-30')
  .filterBounds(geometry);
  
var filtered41 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2020-01-01', '2020-12-30')
  .filterBounds(geometry);
  
var filtered25 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2021-05-01', '2021-07-30')
  .filterBounds(geometry);
  
var filtered26 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2021-07-01', '2021-10-30')
  .filterBounds(geometry);
  
var filtered27 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2021-10-01', '2021-12-30')
  .filterBounds(geometry);
  
var filtered42 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2021-01-01', '2021-12-30')
  .filterBounds(geometry);
  
var filtered28 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2022-05-01', '2022-07-30')
  .filterBounds(geometry);
  
var filtered29 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2022-07-01', '2022-10-30')
  .filterBounds(geometry);
  
var filtered30 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2022-10-01', '2022-12-30')
  .filterBounds(geometry);
  
var filtered43 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2022-01-01', '2022-12-30')
  .filterBounds(geometry);
  
var filtered31 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2023-05-01', '2023-07-30')
  .filterBounds(geometry);
  
var filtered32 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2023-07-01', '2023-10-30')
  .filterBounds(geometry);
  
var filtered33 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2023-10-01', '2023-12-30')
  .filterBounds(geometry);
  
var filtered44 = landsat8
  .filter(ee.Filter.lt('CLOUD_COVER', 30))
  .filterDate('2023-01-01', '2023-12-30')
  .filterBounds(geometry);
  

  
// Rename and print the filtered collection
//print(filtered33)

var medianComposite = filtered.median().clip(geometry);
var medianComposite2 = filtered2.median().clip(geometry);
var medianComposite3 = filtered3.median().clip(geometry);
var medianComposite4 = filtered4.median().clip(geometry);
var medianComposite5 = filtered5.median().clip(geometry);
var medianComposite6 = filtered6.median().clip(geometry);
var medianComposite7 = filtered7.median().clip(geometry);
var medianComposite8 = filtered8.median().clip(geometry);
var medianComposite9 = filtered9.median().clip(geometry);
var medianComposite10 = filtered10.median().clip(geometry);
var medianComposite11 = filtered11.median().clip(geometry);
var medianComposite12 = filtered12.median().clip(geometry);
var medianComposite13 = filtered13.median().clip(geometry);
var medianComposite14 = filtered14.median().clip(geometry);
var medianComposite15 = filtered15.median().clip(geometry);
var medianComposite16 = filtered16.median().clip(geometry);
var medianComposite17 = filtered17.median().clip(geometry);
var medianComposite18 = filtered18.median().clip(geometry);
var medianComposite19 = filtered19.median().clip(geometry);
var medianComposite20 = filtered20.median().clip(geometry);
var medianComposite21 = filtered21.median().clip(geometry);
var medianComposite22 = filtered22.median().clip(geometry);
var medianComposite23 = filtered23.median().clip(geometry);
var medianComposite24 = filtered24.median().clip(geometry);
var medianComposite25 = filtered25.median().clip(geometry);
var medianComposite26 = filtered26.median().clip(geometry);
var medianComposite27 = filtered27.median().clip(geometry);
var medianComposite28 = filtered28.median().clip(geometry);
var medianComposite29 = filtered29.median().clip(geometry);
var medianComposite30 = filtered30.median().clip(geometry);
var medianComposite31 = filtered31.median().clip(geometry);
var medianComposite32 = filtered32.median().clip(geometry);
var medianComposite33 = filtered33.median().clip(geometry);
var medianComposite34 = filtered34.median().clip(geometry);
var medianComposite35 = filtered35.median().clip(geometry);
var medianComposite36 = filtered36.median().clip(geometry);
var medianComposite37 = filtered37.median().clip(geometry);
var medianComposite38 = filtered38.median().clip(geometry);
var medianComposite39 = filtered39.median().clip(geometry);
var medianComposite40 = filtered40.median().clip(geometry);
var medianComposite41 = filtered41.median().clip(geometry);
var medianComposite42 = filtered42.median().clip(geometry);
var medianComposite43 = filtered43.median().clip(geometry);
var medianComposite44 = filtered44.median().clip(geometry);

print(medianComposite34)
print(medianComposite35)
print(medianComposite36)
print(medianComposite37)
print(medianComposite38)
print(medianComposite39)
print(medianComposite40)
print(medianComposite41)
print(medianComposite42)
print(medianComposite43)
print(medianComposite44)

//var medianComposite = filtered.mosaic().clip(geometry);
//print(medianComposite)
// Visualize the filtered images (RGB)
//Map.centerObject(geometry, 8); // Center the map on the geometry
//Map.addLayer(medianComposite, rgbVis, 'Filtered Landsat Images (RGB)');

function cloudMask(image){
  var qa = image.select('QA_PIXEL');
    // Convert QA_PIXEL band to integer
  qa = qa.toInt();
  
  var dilated = 1<<1;
  var cirrus = 1<<2;
  var cloud = 1<<3;
  var shadow = 1<<4;
  
  var mask = qa.bitwiseAnd(dilated).eq(0)
      .and(qa.bitwiseAnd(cirrus).eq(0))
      .and(qa.bitwiseAnd(cloud).eq(0))
      .and(qa.bitwiseAnd(shadow).eq(0));
      
  return image.updateMask(mask);
}

// Apply cloud masking function to the median composite
var maskedComposite = cloudMask(medianComposite).blend(medianComposite34);

var maskedComposite2 = cloudMask(medianComposite2).blend(medianComposite34);

var maskedComposite3 = cloudMask(medianComposite3).blend(medianComposite34);

var maskedComposite4 = cloudMask(medianComposite4).blend(medianComposite35);

var maskedComposite5 = cloudMask(medianComposite5).blend(medianComposite35);
var maskedComposite6 = cloudMask(medianComposite6).blend(medianComposite35);
var maskedComposite7 = cloudMask(medianComposite7).blend(medianComposite36);
var maskedComposite8 = cloudMask(medianComposite8).blend(medianComposite36);
var maskedComposite9 = cloudMask(medianComposite9).blend(medianComposite36);
var maskedComposite10 = cloudMask(medianComposite10).blend(medianComposite37);
var maskedComposite11 = cloudMask(medianComposite11).blend(medianComposite37);
var maskedComposite12 = cloudMask(medianComposite12).blend(medianComposite37);
var maskedComposite13 = cloudMask(medianComposite13).blend(medianComposite37);
var maskedComposite14 = cloudMask(medianComposite14).blend(medianComposite38);
var maskedComposite15 = cloudMask(medianComposite15).blend(medianComposite38);
var maskedComposite16 = cloudMask(medianComposite16).blend(medianComposite39);
var maskedComposite17 = cloudMask(medianComposite17).blend(medianComposite39);
var maskedComposite18 = cloudMask(medianComposite18).blend(medianComposite40);
var maskedComposite19 = cloudMask(medianComposite19).blend(medianComposite40);
var maskedComposite20 = cloudMask(medianComposite20).blend(medianComposite40);
var maskedComposite21 = cloudMask(medianComposite21).blend(medianComposite41);
var maskedComposite22 = cloudMask(medianComposite22).blend(medianComposite41);
var maskedComposite23 = cloudMask(medianComposite23).blend(medianComposite41);
var maskedComposite24 = cloudMask(medianComposite24).blend(medianComposite42);
var maskedComposite25 = cloudMask(medianComposite25).blend(medianComposite42);
var maskedComposite26 = cloudMask(medianComposite26).blend(medianComposite42);
var maskedComposite27 = cloudMask(medianComposite27).blend(medianComposite43);
var maskedComposite28 = cloudMask(medianComposite28).blend(medianComposite43);
var maskedComposite29 = cloudMask(medianComposite29).blend(medianComposite43);
var maskedComposite30 = cloudMask(medianComposite30).blend(medianComposite44);
var maskedComposite31 = cloudMask(medianComposite31).blend(medianComposite44);
var maskedComposite32 = cloudMask(medianComposite32).blend(medianComposite44);
var maskedComposite33 = cloudMask(medianComposite33).blend(medianComposite44);

/*print(maskedComposite);
print(maskedComposite2);
print(maskedComposite3);
print(maskedComposite4);
print(maskedComposite5);
print(maskedComposite6);
print(maskedComposite7);
print(maskedComposite8);
print(maskedComposite9);
print(maskedComposite10);
print(maskedComposite11);
print(maskedComposite12);
print(maskedComposite13);
print(maskedComposite14);
print(maskedComposite15);
print(maskedComposite16);
print(maskedComposite17);
print(maskedComposite18);
print(maskedComposite19);
print(maskedComposite20);
print(maskedComposite21);
print(maskedComposite22);
print(maskedComposite23);
print(maskedComposite24);
print(maskedComposite25);
print(maskedComposite26);
print(maskedComposite27);
print(maskedComposite28);
print(maskedComposite29);
print(maskedComposite30);
print(maskedComposite31);
print(maskedComposite32);
print(maskedComposite33);*/
// Visualize the masked composite
/*Map.addLayer(maskedComposite, rgbVis, 'Masked Median Composite 2013_1 (RGB)');
Map.addLayer(maskedComposite2, rgbVis, 'Masked Median Composite 2013_2 (RGB)');
Map.addLayer(maskedComposite3, rgbVis, 'Masked Median Composite 2013_3 (RGB)');
Map.addLayer(maskedComposite4, rgbVis, 'Masked Median Composite 2014_1 (RGB)');
Map.addLayer(maskedComposite5, rgbVis, 'Masked Median Composite 2014_2 (RGB)');
Map.addLayer(maskedComposite6, rgbVis, 'Masked Median Composite 2014_3 (RGB)');
Map.addLayer(maskedComposite7, rgbVis, 'Masked Median Composite 2015_1 (RGB)');
Map.addLayer(maskedComposite8, rgbVis, 'Masked Median Composite 2015_2 (RGB)');
Map.addLayer(maskedComposite9, rgbVis, 'Masked Median Composite 2015_3 (RGB)');
Map.addLayer(maskedComposite10, rgbVis, 'Masked Median Composite 2016_1 (RGB)');
Map.addLayer(maskedComposite11, rgbVis, 'Masked Median Composite 2016_2 (RGB)');
Map.addLayer(maskedComposite12, rgbVis, 'Masked Median Composite 2016_3 (RGB)');
Map.addLayer(maskedComposite13, rgbVis, 'Masked Median Composite 2017_1 (RGB)');
Map.addLayer(maskedComposite14, rgbVis, 'Masked Median Composite 2017_2 (RGB)');
Map.addLayer(maskedComposite15, rgbVis, 'Masked Median Composite 2017_3 (RGB)');
Map.addLayer(maskedComposite16, rgbVis, 'Masked Median Composite 2018_1 (RGB)');
Map.addLayer(maskedComposite17, rgbVis, 'Masked Median Composite 2018_2 (RGB)');
Map.addLayer(maskedComposite18, rgbVis, 'Masked Median Composite 2018_3 (RGB)');
Map.addLayer(maskedComposite19, rgbVis, 'Masked Median Composite 2019_1 (RGB)');
Map.addLayer(maskedComposite20, rgbVis, 'Masked Median Composite 2019_2 (RGB)');
Map.addLayer(maskedComposite21, rgbVis, 'Masked Median Composite 2019_3 (RGB)');
Map.addLayer(maskedComposite22, rgbVis, 'Masked Median Composite 2020_1 (RGB)');
Map.addLayer(maskedComposite23, rgbVis, 'Masked Median Composite 2020_2 (RGB)');
Map.addLayer(maskedComposite24, rgbVis, 'Masked Median Composite 2020_3 (RGB)');
Map.addLayer(maskedComposite25, rgbVis, 'Masked Median Composite 2021_1 (RGB)');
Map.addLayer(maskedComposite26, rgbVis, 'Masked Median Composite 2021_2 (RGB)');
Map.addLayer(maskedComposite27, rgbVis, 'Masked Median Composite 2021_3 (RGB)');
Map.addLayer(maskedComposite28, rgbVis, 'Masked Median Composite 2022_1 (RGB)');
Map.addLayer(maskedComposite29, rgbVis, 'Masked Median Composite 2022_2 (RGB)');
Map.addLayer(maskedComposite30, rgbVis, 'Masked Median Composite 2022_3 (RGB)');
Map.addLayer(maskedComposite31, rgbVis, 'Masked Median Composite 2023_1 (RGB)');
Map.addLayer(maskedComposite32, rgbVis, 'Masked Median Composite 2023_2 (RGB)');
Map.addLayer(maskedComposite33, rgbVis, 'Masked Median Composite 2023_3 (RGB)');
Map.addLayer(medianComposite34, rgbVis, 'Annual Median Composite 2013 (RGB)');
Map.addLayer(medianComposite35, rgbVis, 'Annual Median Composite 2014 (RGB)');
Map.addLayer(medianComposite36, rgbVis, 'Annual Median Composite 2015 (RGB)');
Map.addLayer(medianComposite37, rgbVis, 'Annual Median Composite 2016 (RGB)');
Map.addLayer(medianComposite38, rgbVis, 'Annual Median Composite 2017 (RGB)');
Map.addLayer(medianComposite39, rgbVis, 'Annual Median Composite 2018 (RGB)');
Map.addLayer(medianComposite40, rgbVis, 'Annual Median Composite 2019 (RGB)');
Map.addLayer(medianComposite41, rgbVis, 'Annual Median Composite 2020 (RGB)');
Map.addLayer(medianComposite42, rgbVis, 'Annual Median Composite 2021 (RGB)');
Map.addLayer(medianComposite43, rgbVis, 'Annual Median Composite 2022 (RGB)');
Map.addLayer(medianComposite44, rgbVis, 'Annual Median Composite 2023 (RGB)');*/





//NDVI
var ndvi = maskedComposite.normalizedDifference(['B4', 'B3']).rename(['ndvi_2000']);

var ndvi2 = maskedComposite2.normalizedDifference(['B4', 'B3']).rename(['ndvi_2001']);

var ndvi3 = maskedComposite3.normalizedDifference(['B4', 'B3']).rename(['ndvi_2002']);

var ndvi4 = maskedComposite4.normalizedDifference(['B4', 'B3']).rename(['ndvi_2003']);

var ndvi5 = maskedComposite5.normalizedDifference(['B4', 'B3']).rename(['ndvi_2004']);

var ndvi6 = maskedComposite6.normalizedDifference(['B4', 'B3']).rename(['ndvi_2005']);

var ndvi7 = maskedComposite7.normalizedDifference(['B4', 'B3']).rename(['ndvi_2006']);

var ndvi8 = maskedComposite8.normalizedDifference(['B4', 'B3']).rename(['ndvi_2007']);

var ndvi9 = maskedComposite9.normalizedDifference(['B4', 'B3']).rename(['ndvi_2008']);

var ndvi10 = maskedComposite10.normalizedDifference(['B4', 'B3']).rename(['ndvi_2009']);

var ndvi11 = maskedComposite11.normalizedDifference(['B4', 'B3']).rename(['ndvi_2010']);

var ndvi12 = maskedComposite12.normalizedDifference(['B4', 'B3']).rename(['ndvi2011']);

var ndvi13 = maskedComposite13.normalizedDifference(['B4', 'B3']).rename(['ndvi_2012']);

var ndvi14 = maskedComposite14.normalizedDifference(['B4', 'B3']).rename(['ndvi_2013']);

var ndvi15 = maskedComposite15.normalizedDifference(['B4', 'B3']).rename(['ndvi_2014']);

var ndvi16 = maskedComposite16.normalizedDifference(['B4', 'B3']).rename(['ndvi_2015']);

var ndvi17 = maskedComposite17.normalizedDifference(['B4', 'B3']).rename(['ndvi_2016']);

var ndvi18 = maskedComposite18.normalizedDifference(['B4', 'B3']).rename(['ndvi_2017']);

var ndvi19 = maskedComposite19.normalizedDifference(['B4', 'B3']).rename(['ndvi_2018']);

var ndvi20 = maskedComposite20.normalizedDifference(['B4', 'B3']).rename(['ndvi_2019']);

var ndvi21 = maskedComposite21.normalizedDifference(['B4', 'B3']).rename(['ndvi_2020']);

var ndvi22 = maskedComposite22.normalizedDifference(['B4', 'B3']).rename(['ndvi_2021']);

var ndvi23 = maskedComposite23.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi24 = maskedComposite24.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi25 = maskedComposite25.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi26 = maskedComposite26.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi27 = maskedComposite27.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi28 = maskedComposite28.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi29 = maskedComposite29.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi30 = maskedComposite30.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi31 = maskedComposite31.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi32 = maskedComposite32.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);

var ndvi33 = maskedComposite33.normalizedDifference(['B4', 'B3']).rename(['ndvi_2022']);






//VISUALIZE
/*Map.addLayer(ndvi, ndviVis, 'ndvi_2013_1');
Map.addLayer(ndvi2, ndviVis, 'ndvi_2013_2');
Map.addLayer(ndvi3, ndviVis, 'ndvi_2013_3');
Map.addLayer(ndvi4, ndviVis, 'ndvi_2014_1');
Map.addLayer(ndvi5, ndviVis, 'ndvi_2014_2');
Map.addLayer(ndvi6, ndviVis, 'ndvi_2014_3');
Map.addLayer(ndvi7, ndviVis, 'ndvi_2015_1');
Map.addLayer(ndvi8, ndviVis, 'ndvi_2015_2');
Map.addLayer(ndvi9, ndviVis, 'ndvi_2015_3');
Map.addLayer(ndvi10, ndviVis, 'ndvi_2016_1');
Map.addLayer(ndvi11, ndviVis, 'ndvi_2016_2');
Map.addLayer(ndvi12, ndviVis, 'ndvi_2016_3');
Map.addLayer(ndvi13, ndviVis, 'ndvi_2017_1');
Map.addLayer(ndvi14, ndviVis, 'ndvi_2017_2');
Map.addLayer(ndvi15, ndviVis, 'ndvi_2017_3');
Map.addLayer(ndvi16, ndviVis, 'ndvi_2018_1');
Map.addLayer(ndvi17, ndviVis, 'ndvi_2018_2');
Map.addLayer(ndvi18, ndviVis, 'ndvi_2018_3');
Map.addLayer(ndvi19, ndviVis, 'ndvi_2019_1');
Map.addLayer(ndvi20, ndviVis, 'ndvi_2019_2');
Map.addLayer(ndvi21, ndviVis, 'ndvi_2019_3');
Map.addLayer(ndvi22, ndviVis, 'ndvi_2020_1');
Map.addLayer(ndvi23, ndviVis, 'ndvi_2020_2');
Map.addLayer(ndvi24, ndviVis, 'ndvi_2020_3');
Map.addLayer(ndvi25, ndviVis, 'ndvi_2021_1');
Map.addLayer(ndvi26, ndviVis, 'ndvi_2021_2');
Map.addLayer(ndvi27, ndviVis, 'ndvi_2021_3');
Map.addLayer(ndvi28, ndviVis, 'ndvi_2022_1');
Map.addLayer(ndvi29, ndviVis, 'ndvi_2022_2');
Map.addLayer(ndvi30, ndviVis, 'ndvi_2022_3');
Map.addLayer(ndvi31, ndviVis, 'ndvi_2023_1');
Map.addLayer(ndvi32, ndviVis, 'ndvi_2023_2');
Map.addLayer(ndvi33, ndviVis, 'ndvi_2023_3');*/


//NBR2
// Calculate NBR2 index
var nbr2a = maskedComposite.normalizedDifference(['B4', 'B7']).rename('NBR2_2013_1');

var nbr2b = maskedComposite2.normalizedDifference(['B4', 'B7']).rename('NBR2_2013_2');

var nbr2c = maskedComposite3.normalizedDifference(['B4', 'B7']).rename('NBR2_2013_3');

var nbr2d = maskedComposite4.normalizedDifference(['B4', 'B7']).rename('NBR2_2013_4');

var nbr2e = maskedComposite5.normalizedDifference(['B4', 'B7']).rename('NBR2_2014_1');

var nbr2f = maskedComposite6.normalizedDifference(['B4', 'B7']).rename('NBR2_2014_2');

var nbr2g = maskedComposite7.normalizedDifference(['B4', 'B7']).rename('NBR2_2014_3');

var nbr2h = maskedComposite8.normalizedDifference(['B4', 'B7']).rename('NBR2_2014_4');

var nbr2i = maskedComposite9.normalizedDifference(['B4', 'B7']).rename('NBR2_2015_1');

var nbr2j = maskedComposite10.normalizedDifference(['B4', 'B7']).rename('NBR2_2015_2');

var nbr2k = maskedComposite11.normalizedDifference(['B4', 'B7']).rename('NBR2_2015_3');

var nbr2l = maskedComposite12.normalizedDifference(['B4', 'B7']).rename('NBR2_2015_4');

var nbr2m = maskedComposite13.normalizedDifference(['B4', 'B7']).rename('NBR2_2016_1');

var nbr2n = maskedComposite14.normalizedDifference(['B4', 'B7']).rename('NBR2_2016_2');

var nbr2o = maskedComposite15.normalizedDifference(['B4', 'B7']).rename('NBR2_2016_3');

var nbr2p = maskedComposite16.normalizedDifference(['B4', 'B7']).rename('NBR2_2016_4');

var nbr2q = maskedComposite17.normalizedDifference(['B4', 'B7']).rename('NBR2_2017_1');

var nbr2r = maskedComposite18.normalizedDifference(['B4', 'B7']).rename('NBR2_2017_2');

var nbr2s = maskedComposite19.normalizedDifference(['B4', 'B7']).rename('NBR2_2017_3');

var nbr2t = maskedComposite20.normalizedDifference(['B4', 'B7']).rename('NBR2_2017_4');

var nbr2u = maskedComposite21.normalizedDifference(['B4', 'B7']).rename('NBR2_2018_1');

var nbr2v = maskedComposite22.normalizedDifference(['B4', 'B7']).rename('NBR2_2018_2');

var nbr2w = maskedComposite23.normalizedDifference(['B4', 'B7']).rename('NBR2_2018_3');

var nbr2x = maskedComposite24.normalizedDifference(['B4', 'B7']).rename('NBR2_2018_4');

var nbr2y = maskedComposite25.normalizedDifference(['B4', 'B7']).rename('NBR2_2019_1');

var nbr2z = maskedComposite26.normalizedDifference(['B4', 'B7']).rename('NBR2_2019_2');

var nbr2aa = maskedComposite27.normalizedDifference(['B4', 'B7']).rename('NBR2_2019_3');

var nbr2bb = maskedComposite28.normalizedDifference(['B4', 'B7']).rename('NBR2_2019_4');

var nbr2cc = maskedComposite29.normalizedDifference(['B4', 'B7']).rename('NBR2_2020_1');

var nbr2dd = maskedComposite30.normalizedDifference(['B4', 'B7']).rename('NBR2_2020_2');

var nbr2ee = maskedComposite31.normalizedDifference(['B4', 'B7']).rename('NBR2_2020_3');

var nbr2ff = maskedComposite32.normalizedDifference(['B4', 'B7']).rename('NBR2_2020_4');

var nbr2gg = maskedComposite33.normalizedDifference(['B4', 'B7']).rename('NBR2_2021_1');



/*Map.addLayer(nbr2a, nbr2Vis, 'nbr2_2000');
Map.addLayer(nbr2b, nbr2Vis, 'nbr2_2001');
Map.addLayer(nbr2c, nbr2Vis, 'nbr2_2002');
Map.addLayer(nbr2d, nbr2Vis, 'nbr2_2003');
Map.addLayer(nbr2e, nbr2Vis, 'nbr2_2004');
Map.addLayer(nbr2f, nbr2Vis, 'nbr2_2005');
Map.addLayer(nbr2g, nbr2Vis, 'nbr2_2006');
Map.addLayer(nbr2h, nbr2Vis, 'nbr2_2007');
Map.addLayer(nbr2i, nbr2Vis, 'nbr2_2008');
Map.addLayer(nbr2j, nbr2Vis, 'nbr2_2009');
Map.addLayer(nbr2k, nbr2Vis, 'nbr2_2010');
Map.addLayer(nbr2l, nbr2Vis, 'nbr2_2011');
Map.addLayer(nbr2m, nbr2Vis, 'nbr2_2012');
Map.addLayer(nbr2n, nbr2Vis, 'nbr2_2013');
Map.addLayer(nbr2o, nbr2Vis, 'nbr2_2014');
Map.addLayer(nbr2p, nbr2Vis, 'nbr2_2015');
Map.addLayer(nbr2q, nbr2Vis, 'nbr2_2016');
Map.addLayer(nbr2r, nbr2Vis, 'nbr2_2017');
Map.addLayer(nbr2s, nbr2Vis, 'nbr2_2018');
Map.addLayer(nbr2t, nbr2Vis, 'nbr2_2019');
Map.addLayer(nbr2u, nbr2Vis, 'nbr2_2020');
Map.addLayer(nbr2v, nbr2Vis, 'nbr2_2021');
Map.addLayer(nbr2w, nbr2Vis, 'nbr2_2022');*/



//B3-B2
// Calculate B3-B2
var b3MinusB2a = maskedComposite.select('B3').subtract(medianComposite.select('B2')).rename('b3_2000');

var b3MinusB2b = maskedComposite2.select('B3').subtract(medianComposite2.select('B2')).rename('b3_2001');

var b3MinusB2c = maskedComposite3.select('B3').subtract(medianComposite3.select('B2')).rename('b3_2002');

var b3MinusB2d = maskedComposite4.select('B3').subtract(medianComposite4.select('B2')).rename('b3_2003');

var b3MinusB2e = maskedComposite5.select('B3').subtract(medianComposite5.select('B2')).rename('b3_2004');

var b3MinusB2f = maskedComposite6.select('B3').subtract(medianComposite6.select('B2')).rename('b3_2005');

var b3MinusB2g = maskedComposite7.select('B3').subtract(medianComposite7.select('B2')).rename('b3_2006');

var b3MinusB2h = maskedComposite8.select('B3').subtract(medianComposite8.select('B2')).rename('b3_2007');

var b3MinusB2i = maskedComposite9.select('B3').subtract(medianComposite9.select('B2')).rename('b3_2008');

var b3MinusB2j = maskedComposite10.select('B3').subtract(medianComposite10.select('B2')).rename('b3_2009');

var b3MinusB2k = maskedComposite11.select('B3').subtract(medianComposite11.select('B2')).rename('b3_2010');

var b3MinusB2l = maskedComposite12.select('B3').subtract(medianComposite12.select('B2')).rename('b3_2011');

var b3MinusB2m = maskedComposite13.select('B3').subtract(medianComposite13.select('B2')).rename('b3_2012');

var b3MinusB2n = maskedComposite14.select('B3').subtract(medianComposite14.select('B2')).rename('b3_2013');

var b3MinusB2o = maskedComposite15.select('B3').subtract(medianComposite15.select('B2')).rename('b3_2014');

var b3MinusB2p = maskedComposite16.select('B3').subtract(medianComposite16.select('B2')).rename('b3_2015');

var b3MinusB2q = maskedComposite17.select('B3').subtract(medianComposite17.select('B2')).rename('b3_20016');

var b3MinusB2r = maskedComposite18.select('B3').subtract(medianComposite18.select('B2')).rename('b3_2017');

var b3MinusB2s = maskedComposite19.select('B3').subtract(medianComposite19.select('B2')).rename('b3_2018');

var b3MinusB2t = maskedComposite20.select('B3').subtract(medianComposite20.select('B2')).rename('b3_2019');

var b3MinusB2u = maskedComposite21.select('B3').subtract(medianComposite21.select('B2')).rename('b3_2020');

var b3MinusB2v = maskedComposite22.select('B3').subtract(medianComposite22.select('B2')).rename('b3_2021');

var b3MinusB2w = maskedComposite23.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2x = maskedComposite24.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2y = maskedComposite25.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2z = maskedComposite26.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2aa = maskedComposite27.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2bb = maskedComposite28.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2cc = maskedComposite29.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2dd = maskedComposite30.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2ee = maskedComposite31.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2ff = maskedComposite32.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');

var b3MinusB2gg = maskedComposite33.select('B3').subtract(medianComposite23.select('B2')).rename('b3_2022');



/*Map.addLayer(b3MinusB2a, b3MinusB2Vis, 'b3MinusB2_2000');
Map.addLayer(b3MinusB2b, b3MinusB2Vis, 'b3MinusB2_2001');
Map.addLayer(b3MinusB2c, b3MinusB2Vis, 'b3MinusB2_2002');
Map.addLayer(b3MinusB2d, b3MinusB2Vis, 'b3MinusB2_2003');
Map.addLayer(b3MinusB2e, b3MinusB2Vis, 'b3MinusB2_2004');
Map.addLayer(b3MinusB2f, b3MinusB2Vis, 'b3MinusB2_2005');
Map.addLayer(b3MinusB2g, b3MinusB2Vis, 'b3MinusB2_2006');
Map.addLayer(b3MinusB2h, b3MinusB2Vis, 'b3MinusB2_2007');
Map.addLayer(b3MinusB2i, b3MinusB2Vis, 'b3MinusB2_2008');
Map.addLayer(b3MinusB2j, b3MinusB2Vis, 'b3MinusB2_2009');
Map.addLayer(b3MinusB2k, b3MinusB2Vis, 'b3MinusB2_2010');
Map.addLayer(b3MinusB2l, b3MinusB2Vis, 'b3MinusB2_2011');
Map.addLayer(b3MinusB2m, b3MinusB2Vis, 'b3MinusB2_2012');
Map.addLayer(b3MinusB2n, b3MinusB2Vis, 'b3MinusB2_2013');
Map.addLayer(b3MinusB2o, b3MinusB2Vis, 'b3MinusB2_2014');
Map.addLayer(b3MinusB2p, b3MinusB2Vis, 'b3MinusB2_2015');
Map.addLayer(b3MinusB2q, b3MinusB2Vis, 'b3MinusB2_2016');
Map.addLayer(b3MinusB2r, b3MinusB2Vis, 'b3MinusB2_2017');
Map.addLayer(b3MinusB2s, b3MinusB2Vis, 'b3MinusB2_2018');
Map.addLayer(b3MinusB2t, b3MinusB2Vis, 'b3MinusB2_2019');
Map.addLayer(b3MinusB2u, b3MinusB2Vis, 'b3MinusB2_2020');
Map.addLayer(b3MinusB2v, b3MinusB2Vis, 'b3MinusB2_2021');
Map.addLayer(b3MinusB2w, b3MinusB2Vis, 'b3MinusB2_2022');*/


//B2-B1
//Calculate B2-B1
var b2MinusB1a = maskedComposite.select('B2').subtract(medianComposite.select('B1')).rename('b2_2000');

var b2MinusB1b = maskedComposite2.select('B2').subtract(medianComposite2.select('B1')).rename('b2_2001');

var b2MinusB1c = maskedComposite3.select('B2').subtract(medianComposite3.select('B1')).rename('b2_2002');

var b2MinusB1d = maskedComposite4.select('B2').subtract(medianComposite4.select('B1')).rename('b2_2003');

var b2MinusB1e = maskedComposite5.select('B2').subtract(medianComposite5.select('B1')).rename('b2_2004');

var b2MinusB1f = maskedComposite6.select('B2').subtract(medianComposite6.select('B1')).rename('b2_2005');

var b2MinusB1g = maskedComposite7.select('B2').subtract(medianComposite7.select('B1')).rename('b2_2006');

var b2MinusB1h = maskedComposite8.select('B2').subtract(medianComposite8.select('B1')).rename('b2_2007');

var b2MinusB1i = maskedComposite9.select('B2').subtract(medianComposite9.select('B1')).rename('b2_2008');

var b2MinusB1j = maskedComposite10.select('B2').subtract(medianComposite10.select('B1')).rename('b2_2009');

var b2MinusB1k = maskedComposite11.select('B2').subtract(medianComposite11.select('B1')).rename('b2_2010');

var b2MinusB1l = maskedComposite12.select('B2').subtract(medianComposite12.select('B1')).rename('b2_2011');

var b2MinusB1m = maskedComposite13.select('B2').subtract(medianComposite13.select('B1')).rename('b2_2012');

var b2MinusB1n = maskedComposite14.select('B2').subtract(medianComposite14.select('B1')).rename('b2_2013');

var b2MinusB1o = maskedComposite15.select('B2').subtract(medianComposite15.select('B1')).rename('b2_2014');

var b2MinusB1p = maskedComposite16.select('B2').subtract(medianComposite16.select('B1')).rename('b2_2015');

var b2MinusB1q = maskedComposite17.select('B2').subtract(medianComposite17.select('B1')).rename('b2_2016');

var b2MinusB1r = maskedComposite18.select('B2').subtract(medianComposite18.select('B1')).rename('b2_2017');

var b2MinusB1s = maskedComposite19.select('B2').subtract(medianComposite19.select('B1')).rename('b2_2018');

var b2MinusB1t = maskedComposite20.select('B2').subtract(medianComposite20.select('B1')).rename('b2_2019');

var b2MinusB1u = maskedComposite21.select('B2').subtract(medianComposite21.select('B1')).rename('b2_2020');

var b2MinusB1v = maskedComposite22.select('B2').subtract(medianComposite22.select('B1')).rename('b2_2021');

var b2MinusB1w = maskedComposite23.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1x = maskedComposite24.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1y = maskedComposite25.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1z = maskedComposite26.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1aa = maskedComposite27.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1bb = maskedComposite28.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1cc = maskedComposite29.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1dd = maskedComposite30.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1ee = maskedComposite31.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1ff = maskedComposite32.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');

var b2MinusB1gg = maskedComposite33.select('B2').subtract(medianComposite23.select('B1')).rename('b2_2022');


var combinedImage = ndvi.addBands(nbr2a).addBands(b3MinusB2a).addBands(b2MinusB1a);
var combinedImage2 = ndvi2.addBands(nbr2b).addBands(b3MinusB2b).addBands(b2MinusB1b);
var combinedImage3 = ndvi3.addBands(nbr2c).addBands(b3MinusB2c).addBands(b2MinusB1c);
var combinedImage4 = ndvi4.addBands(nbr2d).addBands(b3MinusB2d).addBands(b2MinusB1d);
var combinedImage5 = ndvi5.addBands(nbr2e).addBands(b3MinusB2e).addBands(b2MinusB1e);
var combinedImage6 = ndvi6.addBands(nbr2f).addBands(b3MinusB2f).addBands(b2MinusB1f);
var combinedImage7 = ndvi7.addBands(nbr2g).addBands(b3MinusB2g).addBands(b2MinusB1g);
var combinedImage8 = ndvi8.addBands(nbr2h).addBands(b3MinusB2h).addBands(b2MinusB1h);
var combinedImage9 = ndvi9.addBands(nbr2i).addBands(b3MinusB2i).addBands(b2MinusB1i);
var combinedImage10 = ndvi10.addBands(nbr2j).addBands(b3MinusB2j).addBands(b2MinusB1j);
var combinedImage11 = ndvi11.addBands(nbr2k).addBands(b3MinusB2k).addBands(b2MinusB1k);
var combinedImage12 = ndvi12.addBands(nbr2l).addBands(b3MinusB2l).addBands(b2MinusB1l);
var combinedImage13 = ndvi13.addBands(nbr2m).addBands(b3MinusB2m).addBands(b2MinusB1m);
var combinedImage14 = ndvi14.addBands(nbr2n).addBands(b3MinusB2n).addBands(b2MinusB1n);
var combinedImage15 = ndvi15.addBands(nbr2o).addBands(b3MinusB2o).addBands(b2MinusB1o);
var combinedImage16 = ndvi16.addBands(nbr2p).addBands(b3MinusB2p).addBands(b2MinusB1p);
var combinedImage17 = ndvi17.addBands(nbr2q).addBands(b3MinusB2q).addBands(b2MinusB1q);
var combinedImage18 = ndvi18.addBands(nbr2r).addBands(b3MinusB2r).addBands(b2MinusB1r);
var combinedImage19 = ndvi19.addBands(nbr2s).addBands(b3MinusB2s).addBands(b2MinusB1s);
var combinedImage20 = ndvi20.addBands(nbr2t).addBands(b3MinusB2t).addBands(b2MinusB1t);
var combinedImage21 = ndvi21.addBands(nbr2u).addBands(b3MinusB2u).addBands(b2MinusB1u);
var combinedImage22 = ndvi22.addBands(nbr2v).addBands(b3MinusB2v).addBands(b2MinusB1v);
var combinedImage23 = ndvi23.addBands(nbr2w).addBands(b3MinusB2w).addBands(b2MinusB1w);
var combinedImage24 = ndvi24.addBands(nbr2x).addBands(b3MinusB2x).addBands(b2MinusB1x);
var combinedImage25 = ndvi25.addBands(nbr2y).addBands(b3MinusB2y).addBands(b2MinusB1y);
var combinedImage26 = ndvi26.addBands(nbr2z).addBands(b3MinusB2z).addBands(b2MinusB1z);
var combinedImage27 = ndvi27.addBands(nbr2aa).addBands(b3MinusB2aa).addBands(b2MinusB1aa);
var combinedImage28 = ndvi28.addBands(nbr2bb).addBands(b3MinusB2bb).addBands(b2MinusB1bb);
var combinedImage29 = ndvi29.addBands(nbr2cc).addBands(b3MinusB2cc).addBands(b2MinusB1cc);
var combinedImage30 = ndvi30.addBands(nbr2dd).addBands(b3MinusB2dd).addBands(b2MinusB1dd);
var combinedImage31 = ndvi31.addBands(nbr2ee).addBands(b3MinusB2ee).addBands(b2MinusB1ee);
var combinedImage32 = ndvi32.addBands(nbr2ff).addBands(b3MinusB2ff).addBands(b2MinusB1ff);
var combinedImage33 = ndvi33.addBands(nbr2gg).addBands(b3MinusB2gg).addBands(b2MinusB1gg);


// Define criteria for flagging bare soil
var criteria = ee.Image(0);

// Apply criteria to flag bare soil
criteria = combinedImage
  .where(b3MinusB2a.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1a.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi.gte(0).and(ndvi.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2a.gte(0).and(nbr2a.lte(0.075)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage = combinedImage.updateMask(criteria);



// Define criteria for flagging bare soil
var criteria2 = ee.Image(0);

// Apply criteria to flag bare soil
criteria2 = criteria
  .where(b3MinusB2b.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1b.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi2.gte(0).and(ndvi2.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2b.gte(0).and(nbr2b.lte(0.075)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage2 = combinedImage2.updateMask(criteria2);


// Define criteria for flagging bare soil
var criteria3 = ee.Image(0);

// Apply criteria to flag bare soil
criteria3 = criteria
  .where(b3MinusB2c.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1c.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi3.gte(0).and(ndvi3.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2c.gte(0).and(nbr2c.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage3 = combinedImage3.updateMask(criteria3);


// Define criteria for flagging bare soil
var criteria4 = ee.Image(0);

// Apply criteria to flag bare soil
criteria4 = criteria
  .where(b3MinusB2d.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1d.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi4.gte(0).and(ndvi4.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2d.gte(0).and(nbr2d.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage4 = combinedImage4.updateMask(criteria4);

// Define criteria for flagging bare soil
var criteria5 = ee.Image(0);

// Apply criteria to flag bare soil
criteria5 = criteria
  .where(b3MinusB2e.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1e.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi5.gte(0).and(ndvi5.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2e.gte(0).and(nbr2e.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage5 = combinedImage5.updateMask(criteria5);


// Define criteria for flagging bare soil
var criteria6 = ee.Image(0);

// Apply criteria to flag bare soil
criteria6 = criteria
  .where(b3MinusB2f.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1f.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi6.gte(0).and(ndvi6.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2f.gte(0).and(nbr2f.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage6 = combinedImage6.updateMask(criteria6);

// Define criteria for flagging bare soil
var criteria7 = ee.Image(0);

// Apply criteria to flag bare soil
criteria7 = criteria
  .where(b3MinusB2g.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1g.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi7.gte(0).and(ndvi7.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2g.gte(0).and(nbr2g.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage7 = combinedImage7.updateMask(criteria7);

// Define criteria for flagging bare soil
var criteria8 = ee.Image(0);

// Apply criteria to flag bare soil
criteria8 = criteria
  .where(b3MinusB2h.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1h.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi8.gte(0).and(ndvi8.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2h.gte(0).and(nbr2h.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage8 = combinedImage8.updateMask(criteria8);

// Define criteria for flagging bare soil
var criteria9 = ee.Image(0);

// Apply criteria to flag bare soil
criteria9 = criteria
  .where(b3MinusB2i.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1i.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi9.gte(0).and(ndvi9.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2i.gte(0).and(nbr2i.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage9 = combinedImage9.updateMask(criteria9);


// Define criteria for flagging bare soil
var criteria10 = ee.Image(0);

// Apply criteria to flag bare soil
criteria10 = criteria
  .where(b3MinusB2j.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1j.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi10.gte(0).and(ndvi10.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2j.gte(0).and(nbr2j.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage10 = combinedImage10.updateMask(criteria10);


// Define criteria for flagging bare soil
var criteria11 = ee.Image(0);

// Apply criteria to flag bare soil
criteria11 = criteria
  .where(b3MinusB2k.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1k.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi11.gte(0).and(ndvi11.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2k.gte(0).and(nbr2k.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage11 = combinedImage11.updateMask(criteria11);


// Define criteria for flagging bare soil
var criteria12 = ee.Image(0);

// Apply criteria to flag bare soil
criteria12 = criteria
  .where(b3MinusB2l.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1l.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi12.gte(0).and(ndvi12.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2l.gte(0).and(nbr2l.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage12 = combinedImage12.updateMask(criteria12);


// Define criteria for flagging bare soil
var criteria13 = ee.Image(0);

// Apply criteria to flag bare soil
criteria13 = criteria
  .where(b3MinusB2m.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1m.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi13.gte(0).and(ndvi13.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2m.gte(0).and(nbr2m.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage13 = combinedImage13.updateMask(criteria13);


// Define criteria for flagging bare soil
var criteria14 = ee.Image(0);

// Apply criteria to flag bare soil
criteria14 = criteria
  .where(b3MinusB2n.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1n.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi14.gte(0).and(ndvi14.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2n.gte(0).and(nbr2n.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage14 = combinedImage14.updateMask(criteria14);


// Define criteria for flagging bare soil
var criteria15 = ee.Image(0);

// Apply criteria to flag bare soil
criteria15 = criteria
  .where(b3MinusB2o.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1o.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi15.gte(0).and(ndvi15.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2o.gte(0).and(nbr2o.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage15 = combinedImage15.updateMask(criteria15);


// Define criteria for flagging bare soil
var criteria16 = ee.Image(0);

// Apply criteria to flag bare soil
criteria16 = criteria
  .where(b3MinusB2p.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1p.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi16.gte(0).and(ndvi16.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2p.gte(0).and(nbr2p.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage16 = combinedImage16.updateMask(criteria16);


// Define criteria for flagging bare soil
var criteria17 = ee.Image(0);

// Apply criteria to flag bare soil
criteria17 = criteria
  .where(b3MinusB2q.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1q.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi17.gte(0).and(ndvi17.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2q.gte(0).and(nbr2q.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage17 = combinedImage17.updateMask(criteria17);


// Define criteria for flagging bare soil
var criteria18 = ee.Image(0);

// Apply criteria to flag bare soil
criteria18 = criteria
  .where(b3MinusB2r.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1r.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi18.gte(0).and(ndvi18.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2r.gte(0).and(nbr2r.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage18 = combinedImage18.updateMask(criteria18);


// Define criteria for flagging bare soil
var criteria19 = ee.Image(0);

// Apply criteria to flag bare soil
criteria19 = criteria
  .where(b3MinusB2s.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1s.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi19.gte(0).and(ndvi19.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2s.gte(0).and(nbr2s.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage19 = combinedImage19.updateMask(criteria19);


// Define criteria for flagging bare soil
var criteria20 = ee.Image(0);

// Apply criteria to flag bare soil
criteria20 = criteria
  .where(b3MinusB2t.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1t.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi20.gte(0).and(ndvi20.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2t.gte(0).and(nbr2t.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage20 = combinedImage20.updateMask(criteria20);


// Define criteria for flagging bare soil
var criteria21 = ee.Image(0);

// Apply criteria to flag bare soil
criteria21 = criteria
  .where(b3MinusB2u.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1u.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi21.gte(0).and(ndvi21.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2u.gte(0).and(nbr2u.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage21 = combinedImage21.updateMask(criteria21);


// Define criteria for flagging bare soil
var criteria22 = ee.Image(0);

// Apply criteria to flag bare soil
criteria22 = criteria
  .where(b3MinusB2v.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1v.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi22.gte(0).and(ndvi22.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2v.gte(0).and(nbr2v.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage22 = combinedImage22.updateMask(criteria22);


// Define criteria for flagging bare soil
var criteria23 = ee.Image(0);

// Apply criteria to flag bare soil
criteria23 = criteria
  .where(b3MinusB2w.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1w.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi23.gte(0).and(ndvi23.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2w.gte(0).and(nbr2w.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage23 = combinedImage23.updateMask(criteria23);

// Define criteria for flagging bare soil
var criteria24 = ee.Image(0);

// Apply criteria to flag bare soil
criteria24 = criteria
  .where(b3MinusB2x.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1x.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi24.gte(0).and(ndvi24.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2x.gte(0).and(nbr2x.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage24 = combinedImage24.updateMask(criteria24);

// Define criteria for flagging bare soil
var criteria25 = ee.Image(0);

// Apply criteria to flag bare soil
criteria25 = criteria
  .where(b3MinusB2y.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1y.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi25.gte(0).and(ndvi25.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2y.gte(0).and(nbr2y.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage25 = combinedImage25.updateMask(criteria25);

// Define criteria for flagging bare soil
var criteria26 = ee.Image(0);

// Apply criteria to flag bare soil
criteria26 = criteria
  .where(b3MinusB2z.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1z.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi26.gte(0).and(ndvi26.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2z.gte(0).and(nbr2z.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage26 = combinedImage26.updateMask(criteria26);

// Define criteria for flagging bare soil
var criteria27 = ee.Image(0);

// Apply criteria to flag bare soil
criteria27 = criteria
  .where(b3MinusB2aa.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1aa.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi27.gte(0).and(ndvi27.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2aa.gte(0).and(nbr2aa.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage27 = combinedImage27.updateMask(criteria27);

// Define criteria for flagging bare soil
var criteria28 = ee.Image(0);

// Apply criteria to flag bare soil
criteria28 = criteria
  .where(b3MinusB2bb.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1bb.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi28.gte(0).and(ndvi28.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2bb.gte(0).and(nbr2bb.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage28 = combinedImage28.updateMask(criteria28);

// Define criteria for flagging bare soil
var criteria29 = ee.Image(0);

// Apply criteria to flag bare soil
criteria29 = criteria
  .where(b3MinusB2cc.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1cc.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi29.gte(0).and(ndvi29.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2cc.gte(0).and(nbr2cc.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage29 = combinedImage29.updateMask(criteria29);

// Define criteria for flagging bare soil
var criteria30 = ee.Image(0);

// Apply criteria to flag bare soil
criteria30 = criteria
  .where(b3MinusB2dd.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1dd.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi30.gte(0).and(ndvi30.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2dd.gte(0).and(nbr2dd.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage30 = combinedImage30.updateMask(criteria30);

// Define criteria for flagging bare soil
var criteria31 = ee.Image(0);

// Apply criteria to flag bare soil
criteria31 = criteria
  .where(b3MinusB2ee.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1ee.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi31.gte(0).and(ndvi31.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2ee.gte(0).and(nbr2ee.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage31 = combinedImage31.updateMask(criteria31);

// Define criteria for flagging bare soil
var criteria32 = ee.Image(0);

// Apply criteria to flag bare soil
criteria32 = criteria
  .where(b3MinusB2ff.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1ff.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi32.gte(0).and(ndvi32.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2ff.gte(0).and(nbr2ff.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage32 = combinedImage32.updateMask(criteria32);

// Define criteria for flagging bare soil
var criteria33 = ee.Image(0);

// Apply criteria to flag bare soil
criteria33 = criteria
  .where(b3MinusB2gg.gt(0), 1) // Check B4-B3 is positive
  .where(b2MinusB1gg.gt(0), 1) // Check B3-B2 is positive
  .where(ndvi33.gte(0).and(ndvi33.lte(0.25)), 1) // Check NDVI within the range
  .where(nbr2gg.gte(0).and(nbr2gg.lte(0.15)), 1); // Check NBR2 within the range

// Apply the criteria to the median image
var classifiedImage33 = combinedImage33.updateMask(criteria33);


//print(classifiedImage)
// Visualize the NBR2
var visParams = {
 min: 0,
 max: 91,
 //palette: ['black', 'red', 'blue', 'green']
};


/*Map.addLayer(classifiedImage, visParams, 'Bare Soil 2013_1');
Map.addLayer(classifiedImage2, visParams, 'Bare Soil 2013_2');
Map.addLayer(classifiedImage3, visParams, 'Bare Soil 2013_3');
Map.addLayer(classifiedImage4, visParams, 'Bare Soil 2014_1');
Map.addLayer(classifiedImage5, visParams, 'Bare Soil 2014_2');
Map.addLayer(classifiedImage6, visParams, 'Bare Soil 2014_3');
Map.addLayer(classifiedImage7, visParams, 'Bare Soil 2015_1');
Map.addLayer(classifiedImage8, visParams, 'Bare Soil 2015_2');
Map.addLayer(classifiedImage9, visParams, 'Bare Soil 2015_3');
Map.addLayer(classifiedImage10, visParams, 'Bare Soil 2016_1');
Map.addLayer(classifiedImage11, visParams, 'Bare Soil 2016_2');
Map.addLayer(classifiedImage12, visParams, 'Bare Soil 2016_3');
Map.addLayer(classifiedImage13, visParams, 'Bare Soil 2017_1');
Map.addLayer(classifiedImage14, visParams, 'Bare Soil 2017_2');
Map.addLayer(classifiedImage15, visParams, 'Bare Soil 2017_3');
Map.addLayer(classifiedImage16, visParams, 'Bare Soil 2018_1');
Map.addLayer(classifiedImage17, visParams, 'Bare Soil 2018_2');
Map.addLayer(classifiedImage18, visParams, 'Bare Soil 2018_3');
Map.addLayer(classifiedImage19, visParams, 'Bare Soil 2019_1');
Map.addLayer(classifiedImage20, visParams, 'Bare Soil 2019_2');
Map.addLayer(classifiedImage21, visParams, 'Bare Soil 2019_3');
Map.addLayer(classifiedImage22, visParams, 'Bare Soil 2020_1');
Map.addLayer(classifiedImage23, visParams, 'Bare Soil 2020_2');
Map.addLayer(classifiedImage24, visParams, 'Bare Soil 2020_3');
Map.addLayer(classifiedImage25, visParams, 'Bare Soil 2021_1');
Map.addLayer(classifiedImage26, visParams, 'Bare Soil 2021_2');
Map.addLayer(classifiedImage27, visParams, 'Bare Soil 2021_3');
Map.addLayer(classifiedImage28, visParams, 'Bare Soil 2022_1');
Map.addLayer(classifiedImage29, visParams, 'Bare Soil 2022_2');
Map.addLayer(classifiedImage30, visParams, 'Bare Soil 2022_3');
Map.addLayer(classifiedImage31, visParams, 'Bare Soil 2023_1');
Map.addLayer(classifiedImage32, visParams, 'Bare Soil 2023_2');
Map.addLayer(classifiedImage33, visParams, 'Bare Soil 2023_3');*/


var completeBareSoilMap = classifiedImage
  .blend(classifiedImage2)
  .blend(classifiedImage3)
  .blend(classifiedImage4)
  .blend(classifiedImage5)
  .blend(classifiedImage6)
  .blend(classifiedImage7)
  .blend(classifiedImage8)
  .blend(classifiedImage9)
  .blend(classifiedImage10)
  .blend(classifiedImage11)
  .blend(classifiedImage12)
  .blend(classifiedImage13)
  .blend(classifiedImage14)
  .blend(classifiedImage15)
  .blend(classifiedImage16)
  .blend(classifiedImage17)
  .blend(classifiedImage18)
  .blend(classifiedImage19)
  .blend(classifiedImage20)
  .blend(classifiedImage21)
  .blend(classifiedImage22)
  .blend(classifiedImage23)
  .blend(classifiedImage24)
  .blend(classifiedImage25)
  .blend(classifiedImage26)
  .blend(classifiedImage27)
  .blend(classifiedImage28)
  .blend(classifiedImage29)
  .blend(classifiedImage30)
  .blend(classifiedImage31)
  .blend(classifiedImage32)
  .blend(classifiedImage33);



print(completeBareSoilMap)

Map.addLayer(completeBareSoilMap, visParams, 'Nyandarua Bare Soil Map');

// Define Nyandarua county boundary
//var nyandaruaBoundary = ee.FeatureCollection("users/username/Nyandarua_boundary");

// Load Landsat 8 collection and filter by date and region of interest (Nyandarua county)
var landsatCollection = ee.ImageCollection('LANDSAT/LC08/C01/T1_TOA')
  .filterBounds(geometry)
  .filterDate('2013-01-01', '2023-12-31');

// Function to calculate NDVI
function addNDVI(image) {
  var ndvi = image.normalizedDifference(['B5', 'B4']).rename('NDVI');
  return image.addBands(ndvi);
}

// Add NDVI band to each image
var landsatWithNDVI = landsatCollection.map(addNDVI);

// Median composite of NDVI
var ndviMedian = landsatWithNDVI.select('NDVI').median();

// Mask out non-forest areas using NDVI threshold
var forestMask = ndviMedian.gte(0.52);

// Clip the forest mask to Nyandarua county boundary
var forestMaskClipped = forestMask.clip(geometry);

// Visualize the forest as green and make non-forest areas transparent
var visualization = {
  min: 0,
  max: 1,
  palette: ['0000FF', 'green']
};

// Display the result
Map.centerObject(geometry, 9);
Map.addLayer(forestMaskClipped, visualization, 'Forest Mask');



// Apply forest mask to mask out forest areas from the complete bare soil image
var bareSoilWithoutForest = completeBareSoilMap.updateMask(forestMaskClipped.not());

// Display the result
Map.addLayer(bareSoilWithoutForest, {bands: ['ndvi_2000', 'NBR2_2013_1', 'b3_2000'], min: -1, max: 1}, 'Bare Soil Without Forest');

// Specify the folder in Google Drive where you want to export the image
var folder = 'Bare Soil Project';

// Export the image to Google Drive
/*Export.image.toDrive({
  image: bareSoilWithoutForest,
  description: 'BareSoilWithoutForest', // Set the name of the exported file
  folder: folder, // Specify the folder name
  scale: 30, // Specify the scale in meters
  region: geometry, // Specify the region to export
  crs: 'EPSG:4326' // Specify the CRS (Coordinate Reference System)
});*/

// Export the image to Google Drive
Export.image.toDrive({
  image: completeBareSoilMap,
  description: 'completeBareSoilMap', // Set the name of the exported file
  folder: folder, // Specify the folder name
  scale: 30, // Specify the scale in meters
  region: geometry, // Specify the region to export
  crs: 'EPSG:4326' // Specify the CRS (Coordinate Reference System)
});

// Export the image to Google Drive
Export.image.toDrive({
  image: forestMaskClipped,
  description: 'forestMaskClipped', // Set the name of the exported file
  folder: folder, // Specify the folder name
  scale: 30, // Specify the scale in meters
  region: geometry, // Specify the region to export
  crs: 'EPSG:4326' // Specify the CRS (Coordinate Reference System)
});
